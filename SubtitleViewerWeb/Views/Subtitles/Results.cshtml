@model SubtitleViewerWeb.Models.ResultListModel

@{
    ViewBag.Title = "Results";
}

<h2>Results</h2>

@using (Html.BeginForm("Results", "Subtitles", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h5>Select a subtitle file to view</h5>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.File, Model.Results, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            @if (Model != null)
            {
                for (int i = 0; i < Model.Subtitles.Count(); ++i)
                {
                    @Html.HiddenFor(model => Model.Subtitles[i].SubtitleId)
                    @Html.HiddenFor(model => Model.Subtitles[i].SubtitleHash)
                    @Html.HiddenFor(model => Model.Subtitles[i].SubtitleFileName)
                    @Html.HiddenFor(model => Model.Subtitles[i].MovieId)
                    @Html.HiddenFor(model => Model.Subtitles[i].ImdbId)
                    @Html.HiddenFor(model => Model.Subtitles[i].MovieName)
                    @Html.HiddenFor(model => Model.Subtitles[i].OriginalMovieName)
                    @Html.HiddenFor(model => Model.Subtitles[i].MovieYear)
                    @Html.HiddenFor(model => Model.Subtitles[i].LanguageId)
                    @Html.HiddenFor(model => Model.Subtitles[i].LanguageName)
                    @Html.HiddenFor(model => Model.Subtitles[i].Rating)
                    @Html.HiddenFor(model => Model.Subtitles[i].Bad)
                    @Html.HiddenFor(model => Model.Subtitles[i].SubTitleDownloadLink)
                    @Html.HiddenFor(model => Model.Subtitles[i].SubtitlePageLink)
                }
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Style, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.Style, Model.StylesList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Style, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="time-form-group-id" class="form-group" hidden>
            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.Time, new { @class = "form-control text-box single-line", @Value = "", @placeholder = "00:00:00" })
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="View" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section scripts
{
    <script type="text/javascript">
        $(function () {
            $('#Style').change(function () {
                var value = $(this).val();
                if (value == "Remaining") {
                    $('#time-form-group-id').show();
                    $('#Time').prop('required', true);
                } else {
                    $('#time-form-group-id').hide();
                    $('#Time').prop('required',false);
                }
            });
        });
    </script>
}